{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,yBAAKc,UAAU,6BACX,yBAAKC,IAAMf,EAAKgB,IAAKN,IACrB,2BAAIA,KCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAJyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAuBtC,OAhBIC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GAGCH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAACpB,IAIDqB,EDnBsBK,CAAa1B,GAA9Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAMnB,OACI,oCACA,wBAAIJ,UAAU,wBAAyBhB,EAAvC,KACCoB,GAAW,uBAAGJ,UAAU,wBAAb,WACV,yBAAKA,UAAU,aAILH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEtBnBkB,EAAe,WAAM,MAGM1C,mBAAS,CAAC,cAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAS9B,OACI,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OAEvB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,U,MCpBnC8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5246bdfa.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 0){\r\n            //console.log('Submit hecho')\r\n            setcategories(cats => [ inputValue,...cats ]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* <h2>Add Category</h2> */}\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=gQJ8XFxBCNYuaQLqmFUoTa3f8bDfxkVQ`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__fadeOutDown\">\r\n            <img src= {url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","//import React, {useState, useEffect} from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n    const {data:images,loading}= useFetchGifs(category);\r\n    \r\n   \r\n   \r\n\r\n    //getGifs();\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__fadeOutDown\">{ category} </h3>\r\n        {loading && <p className=\"animate__fadeOutDown\">Loading</p>}\r\n        { <div className=\"card-grid\">\r\n            \r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n           \r\n           \r\n        </div> }\r\n       </>         \r\n    )\r\n}","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n        });\r\n        useEffect(() => {\r\n            getGifs(category)\r\n                .then( imgs => {\r\n\r\n                   \r\n                        setState({\r\n                            data: imgs,\r\n                            loading: false\r\n                        })\r\n                   \r\n                    \r\n                })\r\n        }, [category])\r\n\r\n\r\n       \r\n    return state; //{data: [], loading:true}\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai', 'Dragon Balle'];\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n    //const handleAdd = () => {\r\n       // setcategories(['HunterXHunter', ...categories]);\r\n      //  setcategories(cats => [...cats, 'HunterXHunter']);\r\n    //}\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2> \r\n           <AddCategory setcategories={setcategories} />\r\n           <hr />\r\n           {/* <button onClick={handleAdd}>Agregar</button> */}\r\n           <ol>\r\n               {\r\n                   categories.map( category => (\r\n                   //return <li key={category}> {category} </li>\r\n                    <GifGrid\r\n                        key= {category}\r\n                        category= {category}\r\n                    />\r\n                   ))\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}